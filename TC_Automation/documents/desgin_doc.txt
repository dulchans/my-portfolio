--------------------------
タイトル Title
--------------------------
TCA（Testcase Automation with Amazon）

--------------------------
名前 Author
--------------------------
dulchan

--------------------------
目的 Goal
--------------------------
ソフトウェアの回帰テストを自動化して、年間工数を60時間削減する。

--------------------------
やらないこと
-------------
- 各種用語についての説明（テスト技法、リグレッションテスト、バイブコーディングなど
- 使用ツールやスクリプト内の説明（aiの使用ルールのみ軽く説明、モジュールやメソッドの詳細は省略
- 判定条件網羅（Falseの場合の処理）の実演（命令網羅でTrueの場合の処理のみを実演

--------------------------
背景 Background
--------------------------
最近のプロジェクトは、
開発から実装までのサイクルを短い期間で繰り返し実施するアジャイル開発が主流で、
それに比例してテストの量も増加している状況。

特に回帰テスト（リグレッションテスト）の工数は増加傾向で、
既存機能のテストにかかる時間が増加することによって、
新機能のテスト工数が確保できない
もしくは既存テストのカバレッジやスコープを無理やり縮小して、
新規テストの工数を確保するといった状況になりつつある。

そこで、
Pythonを用いたRPAツールを導入して回帰テストを自動化することで、
既存機能の品質も担保しつつ、
自動化で確保した工数を使って新機能のテストを強化し、
ソフトウェア全体の品質向上を図る。

--------------------------
システムの概要
--------------------------
1. ECサイトでの基本購入フローを自動でテストする
2. テスト結果を基にTCを作成

--------------------------
期待する結果
--------------------------
1. リグレッションテストの工数を削減し、新規テストの工数を確保する
2. ヒューマンエラーを限りなく0にして、テストクオリティを向上させる
3. 汎用性のあるツールを作り、別プロジェクトでも使用できる資産にする

--------------------------
問題点
--------------------------
- テストアカウントを使用するため、個人情報の秘匿化はスルー
　クレカ情報を入れて購入まで確認する場合、ハッシュ化や環境変数への隔離などが必須

- GUIで完結する仕組みではないため、コードをいじる必要がある
　ブラウザや商品の選択は、コードの値を調整しなければいけないため、利用できる人が限定的で利便性に欠ける

- エクセル以外でTCを生成したい場合は、修正が必要
　今回はシェア率の多いExcelファイルで作成したが、
　今後はgoogleスプレットシートやNotionに移行する流れなので、環境に合わせて改修が必要

--------------------------
補足
--------------------------
- 回帰テスト（リグレッションテスト）とは、
何か新しい機能を追加したときに、
影響はないだろうけど「一応チェックしないといけない重要な機能」を確認するテストのこと。

例）Amazonをテストする場合
「商品が正常に購入できるか」という機能は絶対必要。
　※商品が買えなければ、そもそもサービスとして成り立たないので

Amazonには最近、Rufus（ルーファス）と呼ばれるAIアシスタントが導入された。
この機能はAIとしてのChatGPTみたいな機能を追加しただけなので、
「決算機能」に直接影響する可能性は低い。

ただ、万が一「決算機能」に影響が出るので、"一応チェックしない"といけない。
このような重要な機能が増えるほど、回帰テストの負担は増えるので、
だったら早めに自動化した方がタイパいいよね。

ということで、今回のツールを作成するに至りました。
以上

